;/*******************************************************
;This program was created by the CodeWizardAVR V3.32
;Automatic Program Generator
;© Copyright 1998-2017 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 9/4/2018
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATxmega128B1
;Program type            : Application
;AVR Core Clock frequency: 2.000000 MHz
;Memory model            : Small
;Data Stack size         : 2048
;*******************************************************/
;
;// I/O Registers definitions
;#include <xmega128b1.h>
;
;// Standard Input/Output functions
;#include <stdio.h>
;
;// Clock System initialization function
;#include "clock_init.h"
;
;// Event System initialization function
;#include "event_system_init.h"
;
;// I/O Ports initialization function
;#include "ports_init.h"
;
;// Timers/Counters initialization functions
;#include "timers_init.h"
;
;// Declare your global variables here
;
;void main(void)
; 0000 002B {

	.CSEG
;PCODE: $00000000 VOL: 0
; 0000 002C // Declare your local variables here
; 0000 002D unsigned char n;
; 0000 002E 
; 0000 002F // Interrupt system initialization
; 0000 0030 // Optimize for speed
; 0000 0031 #pragma optsize-
; 0000 0032 // Make sure the interrupts are disabled
; 0000 0033 #asm("cli")
;	n -> R17
;PCODE: $00000001 VOL: 0
; 0000 0034 // Low level interrupt: Off
; 0000 0035 // Round-robin scheduling for low level interrupt: Off
; 0000 0036 // Medium level interrupt: Off
; 0000 0037 // High level interrupt: On
; 0000 0038 // The interrupt vectors will be placed at the start of the Application FLASH section
; 0000 0039 n=(PMIC.CTRL & (~(PMIC_RREN_bm | PMIC_IVSEL_bm | PMIC_HILVLEN_bm | PMIC_MEDLVLEN_bm | PMIC_LOLVLEN_bm))) |
; 0000 003A 	PMIC_HILVLEN_bm;
;PCODE: $00000002 VOL: 1
;PCODE: $00000003 VOL: 0
;PCODE: $00000004 VOL: 0
;PCODE: $00000005 VOL: 0
; 0000 003B CCP=CCP_IOREG_gc;
;PCODE: $00000006 VOL: 0
;PCODE: $00000007 VOL: 0
; 0000 003C PMIC.CTRL=n;
;PCODE: $00000008 VOL: 1
;PCODE: $00000009 VOL: 0
; 0000 003D // Set the default priority for round-robin scheduling
; 0000 003E PMIC.INTPRI=0x00;
;PCODE: $0000000A VOL: 0
;PCODE: $0000000B VOL: 1
; 0000 003F // Restore optimization for size if needed
; 0000 0040 #pragma optsize_default
; 0000 0041 
; 0000 0042 // System clocks initialization
; 0000 0043 system_clocks_init();
;PCODE: $0000000C VOL: 0
; 0000 0044 
; 0000 0045 // Event system initialization
; 0000 0046 event_system_init();
;PCODE: $0000000D VOL: 0
; 0000 0047 
; 0000 0048 // Ports initialization
; 0000 0049 ports_init();
;PCODE: $0000000E VOL: 0
; 0000 004A 
; 0000 004B // Virtual Ports initialization
; 0000 004C vports_init();
;PCODE: $0000000F VOL: 0
; 0000 004D 
; 0000 004E // Timer/Counter TCC0 initialization
; 0000 004F tcc0_init();
;PCODE: $00000010 VOL: 0
; 0000 0050 
; 0000 0051 // Timer/Counter TCC1 initialization
; 0000 0052 tcc1_init();
;PCODE: $00000011 VOL: 0
; 0000 0053 
; 0000 0054 // Globally enable interrupts
; 0000 0055 #asm("sei")
;PCODE: $00000012 VOL: 0
; 0000 0056 
; 0000 0057 while (1)
;PCODE: $00000013 VOL: 0
; 0000 0058       {
; 0000 0059       // Place your code here
; 0000 005A 	  if((PORTE.IN & 0x01) && (getTime() & 0x100))
;PCODE: $00000014 VOL: 1
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 005B 	  {
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 005C 		PORTB.OUT=0xF0;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 1
; 0000 005D 	  }
; 0000 005E 
; 0000 005F 	  }
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0060       }
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;}
