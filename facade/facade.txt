Facade
----

Why?
-Balance complexity and presentation/usability
-Typical home
	 -Many subsystems (electrical sanitation)
	 -Complex internal structure(e.g., floor layers)
	 -End user not exposed to internals

Same with software!
-Many systems working together provide flexibility but API consumers want it to just work.

Facade - provides a simple, easy to understand/user interface over a large and sophisticated body of code.

-Make a library easier to understand and test.
-Reduce dependencies of user code on internal APIS that may change
	-Allows more flexibility in developing/refactoring the library

-Wrap a poorly deisgn collectino of APIs with a single well-deisgned API.
----

-Build a Facade to provide a simplified API over a set of classes.
-May wish to optionally expose internals through the facade
-May allow users to escalate to use more complex APIs if they need to.
